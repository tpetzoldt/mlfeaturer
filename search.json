[{"path":"https://tpetzoldt.github.io/mlfeaturer/articles/Introduction.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Transformation of Features with Package mlfeaturer","text":"Package mlfeaturer aims provide data manipulation support subset machine learning problems, currently regression problems multiple input variables xx single input variable single input variable yy. typical initial task transform scale variables, split training test sets, , model fitting, compare model outputs original data, test data, test data, independent new data. fills gap style creating large number intermediate data frames variables, found introductory tutorials, full-fledged packages like caret, recipes mlr3. uses S4 object orientation, intentionally simple mostly developed tasks.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/articles/Introduction.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Transformation of Features with Package mlfeaturer","text":"","code":"remotes::install_.packages_github(\"https://github.com/tpetzoldt/mlfeaturer\")"},{"path":"https://tpetzoldt.github.io/mlfeaturer/articles/Introduction.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Transformation of Features with Package mlfeaturer","text":"Lorem ipsum …","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/articles/Introduction.html","id":"acknowledgments","dir":"Articles","previous_headings":"","what":"Acknowledgments","title":"Transformation of Features with Package mlfeaturer","text":"Many thanks R Core Team (R Core Team 2024) developing maintaining R. documentation written using knitr (Xie 2024) rmarkdown (Allaire et al. 2024).","code":""},{"path":[]},{"path":"https://tpetzoldt.github.io/mlfeaturer/articles/ann-simple.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Neural Networks with mlfeaturer and nnet","text":"following, show use mlfeaturer context simple artificial neural network (ANN). data set digitized figures Dauta et al. (1990), analyzed growth rate dependency four algae species light intensity different temperatures. Now, aim create regression model predict growth rate (μ\\mu)) values light temperature within measured range species. save space, demonstrate procedure two four species. data can also fitted parametric models instead ML techniques. explained another tutorial.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/articles/ann-simple.html","id":"package-installation","dir":"Articles","previous_headings":"","what":"Package installation","title":"Neural Networks with mlfeaturer and nnet","text":"install package, first install remotes CRAN. install mlfeatures Github: load required packages:","code":"remotes::install_.packages_github(\"https://github.com/tpetzoldt/mlfeaturer\") library(\"mlfeaturer\") library(\"dplyr\") library(\"ggplot2\") library(\"nnet\")"},{"path":"https://tpetzoldt.github.io/mlfeaturer/articles/ann-simple.html","id":"prepare-data","dir":"Articles","previous_headings":"","what":"Prepare data","title":"Neural Networks with mlfeaturer and nnet","text":"set object dt4 data preprocessing machinery. creating object create_preprocessed_data first add additional columns. species names nominal data, .e. character column, directly supported nnet, convert -called “dummy variables”, four rows containing 0 1: original species column additional column declared id-columns (id_cols) used input output, can used identify observations afterwards. create split vector assigns 60% data randomly training set 40% test set. growthrate column used target (y) variable others inputs. nnet package, input output data need scaled interval [0,1][0, 1], use scale method minmax parameters minand max derived data, machine learning applications, scaling parameters usually derived training set .","code":"## phytoplankton growth rate data set data(dauta4)  spec_dummy <-    model.matrix(~ species - 1, dauta4) |>   as.data.frame() head(spec_dummy) speciesChlorella speciesFragilaria speciesStaurastrum speciesSynechocystis 1                1                 0                  0                    0 2                1                 0                  0                    0 3                1                 0                  0                    0 4                1                 0                  0                    0 5                1                 0                  0                    0 6                1                 0                  0                    0 dt4 <-   dauta4 |>   bind_cols(spec_dummy) |>                     # add columns of dummy variables   mutate(no = 1:n(),          split = sample(c(TRUE, FALSE), n(),   # create random split column                         prob = c(0.6, 0.4), replace = TRUE)) |>   create_preprocessed_data(target_col = \"growthrate\",                            id_col = c(\"species\", \"no\"),                            split_col = \"split\",                            scale_method = \"minmax\",                            scale_option = \"all\" # min/max from complete data set   )"},{"path":"https://tpetzoldt.github.io/mlfeaturer/articles/ann-simple.html","id":"fit-a-neural-network","dir":"Articles","previous_headings":"","what":"Fit a neural network","title":"Neural Networks with mlfeaturer and nnet","text":"fit neural network 8 neurons, can access required data subsets using get_-functions. case , data split according split-column automatically scaled according scaling method minmax defined :","code":"net <- nnet(get_x_train(dt4), get_y_train(dt4),             size = 8, maxit = 200, trace = FALSE)"},{"path":"https://tpetzoldt.github.io/mlfeaturer/articles/ann-simple.html","id":"evaluate-the-network","dir":"Articles","previous_headings":"","what":"Evaluate the network","title":"Neural Networks with mlfeaturer and nnet","text":"check whether training successful, can compare original (scaled) data scaled model outputs. use standard method predict nnet package:  Function ml_evaluate can used calculate standard set evaluation metrics. can course also calculate metrics “manually”, e.g. coefficient determination comparison: can also check residuals remaining patterns:  use functions predict residuals mlfeaturer package , contrast default predict residuals-functions preprocessed data object dt4 first position support pipelining data. function call , complete data set dt4 used, training set black test set red. can see poor performance test set, especially high values, may probably result sub-optimal random splitting strategy.","code":"plot(get_y_train(dt4),       predict(net),      pch = \"+\") ml_evaluate(dt4, net) # default is to use scaled data # A tibble: 5 × 4   metrics train               test               all   <chr>   <chr>               <chr>              <chr> 1 R2      0.969164040334653   0.694730304047481  0.810535429705921 2 MSE     0.00237812881808903 0.019137223670471  0.0132004225419519 3 RMSE    0.0487660621548329  0.138337354573777  0.114893091793858 4 MAE     0.0354220561680988  0.102759300830686  0.0789055167435704 5 BIAS    0.00124145884313852 0.0252304049446036 0.0167324756983281 paste(\"R^2 (train) =\", 1 - var(residuals(net))/var(get_y_train(dt4))) [1] \"R^2 (train) = 0.969164040334653\" plot(predict(dt4, net), residuals(dt4, net), col = factor(get_data(dt4)[, \"split\"]))"},{"path":"https://tpetzoldt.github.io/mlfeaturer/articles/ann-simple.html","id":"graphical-comparison-of-the-results","dir":"Articles","previous_headings":"","what":"Graphical comparison of the results","title":"Neural Networks with mlfeaturer and nnet","text":"far, neural network training model evaluation occurred transformed scales (case minmax , x y). case, can re-transform predictions optional argument to_original_scale compare original y-data switching preprocessing prep = \"none\".  results shown, just demonstration purposes can surely improved, e.g. increasing number epochs, trying multiple fits, applying intelligent splitting (e.g.  stratified instead random), cross-validation, using another machine learning framework.","code":"y_pred <-   predict(dt4, net) |>   as.data.frame() |>   # rename column to avoid duplication with original data   rename(growthrate_pred = growthrate) get_data(dt4) |>   as.data.frame() |>   bind_cols(y_pred) |>   ggplot(aes(light, growthrate)) + geom_point() +   geom_line(aes(light, growthrate_pred)) +   facet_grid(species ~ temperature) y_pred_orig_scale <-   predict(dt4, net,           to_original_scale = TRUE) |>   as.data.frame() |>   rename(growthrate_pred = growthrate)  get_data(dt4, prep = \"none\") |>   as_data_frame() |>   bind_cols(y_pred_orig_scale) |>   ggplot(aes(light, growthrate)) + geom_point() +   geom_line(aes(light, growthrate_pred)) +   facet_grid(species ~ temperature) Warning: `as_data_frame()` was deprecated in tibble 2.0.0. ℹ Please use `as_tibble()` (with slightly different semantics) to convert to a   tibble, or `as.data.frame()` to convert to a data frame."},{"path":"https://tpetzoldt.github.io/mlfeaturer/articles/ann-simple.html","id":"acknowledgments","dir":"Articles","previous_headings":"","what":"Acknowledgments","title":"Neural Networks with mlfeaturer and nnet","text":"Many thanks R Core Team (R Core Team 2024) developing maintaining R. documentation written using knitr (Xie 2024) rmarkdown (Allaire et al. 2024).","code":""},{"path":[]},{"path":"https://tpetzoldt.github.io/mlfeaturer/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Thomas Petzoldt. Author, maintainer.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Petzoldt T (2025). mlfeaturer: Machine Learning Feature Engineering R. R package version 0.2.2, https://tpetzoldt.github.io/mlfeaturer/.","code":"@Manual{,   title = {mlfeaturer: Machine Learning Feature Engineering with R},   author = {Thomas Petzoldt},   year = {2025},   note = {R package version 0.2.2},   url = {https://tpetzoldt.github.io/mlfeaturer/}, }"},{"path":[]},{"path":"https://tpetzoldt.github.io/mlfeaturer/index.html","id":"machine-learning-feature-engineering-for-regression-models","dir":"","previous_headings":"","what":"Machine Learning: Feature Engineering for Regression Models","title":"Machine Learning Feature Engineering with R","text":"Package mlfeaturer aims provide data manipulation support subset machine learning problems, currently regression problems multiple input variables xx single input variable single input variable yy. typical initial task transform scale variables, split training test sets, , model fitting, compare model outputs original data, test data, test data, independent new data. fills gap style creating large number intermediate data frames variables, found introductory tutorials, full-fledged packages like caret, recipes mlr3. uses R’s S4 object orientation, intentionally simple mostly intended tasks.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Machine Learning Feature Engineering with R","text":"","code":"remotes::install_.packages_github(\"https://github.com/tpetzoldt/mlfeaturer\")"},{"path":"https://tpetzoldt.github.io/mlfeaturer/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Machine Learning Feature Engineering with R","text":"documentation found https://tpetzoldt.github.io/mlfeaturer/.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/index.html","id":"status","dir":"","previous_headings":"","what":"Status","title":"Machine Learning Feature Engineering with R","text":"embryonic, assembling just ideas","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/as.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert feature_data to feature_data_list — as","title":"Convert feature_data to feature_data_list — as","text":"Coerces `feature_data` object `feature_data_list` object. Coerces `feature_data` object standard R `list` object.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/as.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert feature_data to feature_data_list — as","text":"`feature_data` object.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/as.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert feature_data to feature_data_list — as","text":"`feature_data_list` object. `list` object.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/as.list-feature_data-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert feature_data to a list — as.list,feature_data-method","title":"Convert feature_data to a list — as.list,feature_data-method","text":"Coerces `feature_data` object `list` object.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/as.list-feature_data-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert feature_data to a list — as.list,feature_data-method","text":"","code":"# S4 method for class 'feature_data' as.list(x)"},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/as.list-feature_data-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert feature_data to a list — as.list,feature_data-method","text":"x `feature_data` object.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/as.list-feature_data-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert feature_data to a list — as.list,feature_data-method","text":"`list` object.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/create_preprocessed_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Preprocessed Data Object — create_preprocessed_data","title":"Create Preprocessed Data Object — create_preprocessed_data","text":"Constructs `feature_data` object, calculates scaling parameters,   optionally applies initial data transformations.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/create_preprocessed_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Preprocessed Data Object — create_preprocessed_data","text":"","code":"create_preprocessed_data(   data,   target_col,   id_col = NULL,   split_col = NULL,   scale_option = c(\"train\", \"test\", \"all\"),   scale_method = c(\"zscore\", \"minmax\", \"none\"),   fun_transform = NULL,   fun_inverse = NULL )"},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/create_preprocessed_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Preprocessed Data Object — create_preprocessed_data","text":"data data frame containing raw data. target_col Character vector specifying name target variable column. id_col Character vector specifying name ID column (optional). split_col Character vector specifying name column used train/test split. scale_option Character string specifying scaling option. Must one \"train\", \"test\", \"\". Defaults \"train\". scale_method Character string specifying scaling method. Must one \"zscore\" (standardization) \"minmax\" (normalization). Defaults \"zscore\". fun_transform named list functions apply data ** scaling. names list elements correspond columns transform. fun_inverse named list functions representing inverse transformations `fun_transform`.  applied `inverse_transform` method.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/create_preprocessed_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Preprocessed Data Object — create_preprocessed_data","text":"`feature_data` object.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/create_preprocessed_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Preprocessed Data Object — create_preprocessed_data","text":"function calculates scaling parameters (mean, standard deviation, min, max) based specified `scale_option` `scale_method`. creates `feature_data` object, storing original data calculated parameters. `fun_transform` provided, applies specified transformations data creating object. `id_col` given, additional column `id` row numers created. `split_col` missing, random `split` column created.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/create_preprocessed_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Preprocessed Data Object — create_preprocessed_data","text":"","code":"# Example usage (replace with your actual data and column names) df <- data.frame(   id = 1:10,   x = runif(10),   y = rnorm(10),   z = 1:10,   split = sample(c(TRUE, FALSE), 10, replace = TRUE) )  transformations <- list(   x = log,   y = \\(y) sqrt(5 + y),   z = \\(z) z^2 )  inverse_transformations <- list(   x = exp,   y = \\(y) y^2 - 5,   z = sqrt )  prep_data <- create_preprocessed_data(   df, id_col = \"id\", target_col = \"y\", split_col = \"split\",   fun_transform = transformations, fun_inverse = inverse_transformations) print(prep_data) #> An object of class \"feature_data\" #> Slot \"data\": #>    id           x          y  z split #> 1   1 0.080750138  1.1484116  1  TRUE #> 2   2 0.834333037 -1.8218177  2  TRUE #> 3   3 0.600760886 -0.2473253  3 FALSE #> 4   4 0.157208442 -0.2441996  4 FALSE #> 5   5 0.007399441 -0.2827054  5 FALSE #> 6   6 0.466393497 -0.5536994  6  TRUE #> 7   7 0.497777389  0.6289820  7  TRUE #> 8   8 0.289767245  2.0650249  8 FALSE #> 9   9 0.732881987 -1.6309894  9  TRUE #> 10 10 0.772521511  0.5124269 10  TRUE #>  #> Slot \"params\": #> An object of class \"feature_params\" #> Slot \"id_col\": #> [1] \"id\" #>  #> Slot \"target_col\": #> [1] \"y\" #>  #> Slot \"split_col\": #> [1] \"split\" #>  #> Slot \"scale_option\": #> [1] \"train\" #>  #> Slot \"scale_method\": #> [1] \"zscore\" #>  #> Slot \"mean_vals\": #>          x          y          z  #>  0.5641096 -0.2861143  5.8333333  #>  #> Slot \"sd_vals\": #>         x         y         z  #> 0.2801875 1.2467245 3.6560452  #>  #> Slot \"min_vals\": #>           x           y           z  #>  0.08075014 -1.82181766  1.00000000  #>  #> Slot \"max_vals\": #>         x         y         z  #>  0.834333  1.148412 10.000000  #>  #> Slot \"t_mean_vals\": #>          x          y          z  #> -0.7877854  2.1544767 45.1666667  #>  #> Slot \"t_sd_vals\": #>          x          y          z  #>  0.8801146  0.2941755 40.0869887  #>  #> Slot \"t_min_vals\": #>         x         y         z  #> -2.516396  1.782746  1.000000  #>  #> Slot \"t_max_vals\": #>           x           y           z  #>  -0.1811226   2.4795991 100.0000000  #>  #> Slot \"fun_transform\": #> $x #> function (x, base = exp(1))  .Primitive(\"log\") #>  #> $y #> function (y)  #> sqrt(5 + y) #> <environment: 0x5653a0c0c630> #>  #> $z #> function (z)  #> z^2 #> <environment: 0x5653a0c0c630> #>  #>  #> Slot \"fun_inverse\": #> $x #> function (x)  .Primitive(\"exp\") #>  #> $y #> function (y)  #> y^2 - 5 #> <environment: 0x5653a0c0c630> #>  #> $z #> function (x)  .Primitive(\"sqrt\") #>  #>  #> Slot \"transformed\": #> [1] FALSE #>  #>"},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/dauta4.html","id":null,"dir":"Reference","previous_headings":"","what":"Growthrate of Algae — dauta4","title":"Growthrate of Algae — dauta4","text":"Growthrates four different phytoplankton species, dependent temperature light.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/dauta4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Growthrate of Algae — dauta4","text":"Data frame following columns: species Phytoplankton species. temperature Temperature °C. light Photosynthetic active radiation     µ E m-2s-1. growthrate Population growth rate     d-1.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/dauta4.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Growthrate of Algae — dauta4","text":"example data taken manually figures Dauta et al. 1990.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/dauta4.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Growthrate of Algae — dauta4","text":"Dauta, , Devaux, J, Piquemal, F Boumnich, L (1990) Growth Rate Four Algae Relation Light Temperature. Hydrobiologia 207: 221–26. doi:10.1007/BF00041459","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/evaluate.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluates model performance across different data subsets. — ml_evaluate","title":"Evaluates model performance across different data subsets. — ml_evaluate","text":"function calculates various model evaluation metrics, including R-squared, Mean Squared Error (MSE), Root Mean Squared Error (RMSE), Mean Absolute Error (MAE), different subsets data (, train, test).","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/evaluate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluates model performance across different data subsets. — ml_evaluate","text":"","code":"ml_evaluate(object, model, ...)  # S4 method for class 'feature_data' ml_evaluate(   object,   model,   xprep = c(\"both\", \"scale\", \"transform\", \"none\"),   yprep = c(\"both\", \"scale\", \"transform\", \"none\"),   ... )"},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/evaluate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluates model performance across different data subsets. — ml_evaluate","text":"object object class `feature_data` containing data subsets. model fitted model evaluated. ... Additional arguments (currently ignored). xprep Character argument transformed input data (\"transform\"), scaled data (\"scale\" ), transformed scaled data (\"\") original raw x data (\"none\") used. yprep Character argument transformed target values (\"transform\") original raw y-values (\"none\") used.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/evaluate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluates model performance across different data subsets. — ml_evaluate","text":"data frame containing evaluation metrics data subset.   Rows represent metrics (R2, MSE, RMSE, MAE), columns represent   data subsets (, train, test).","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/evaluate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Evaluates model performance across different data subsets. — ml_evaluate","text":"parameters `xprep` `yprep` must exactly   used input output fitted model,   Rescaling `yprep` implemented future versions package.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/evaluate.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Evaluates model performance across different data subsets. — ml_evaluate","text":"ml_evaluate(feature_data): Method estimating set model evaluation criteria model `feature_data` object.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/feature_data-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocessed Data — feature_data-class","title":"Preprocessed Data — feature_data-class","text":"S4 class store preprocessed data associated parameters.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/feature_data-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Preprocessed Data — feature_data-class","text":"data Data frame containing preprocessed data. params `feature_params` object storing parameters used preprocessing.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/feature_data_list-class.html","id":null,"dir":"Reference","previous_headings":"","what":"List Representation of Preprocessed Data — feature_data_list-class","title":"List Representation of Preprocessed Data — feature_data_list-class","text":"S4 class represent preprocessed data list.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/feature_data_list-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"List Representation of Preprocessed Data — feature_data_list-class","text":"x_train Training data (X). x_test Test data (X). x_all data (X). y_train Training data (Y). y_test Test data (Y). y_all data (Y). x_train_scaled Scaled training data (X). x_test_scaled Scaled test data (X). x_all_scaled Scaled data (X).","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/feature_params-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocessing Parameters — feature_params-class","title":"Preprocessing Parameters — feature_params-class","text":"S4 class store parameters used preprocessing pipeline.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/feature_params-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Preprocessing Parameters — feature_params-class","text":"id_col Character vector specifying name ID column. target_col Character vector specifying name target variable column. split_col Character vector specifying name column used train/test split. scale_option Character string specifying scaling option (\"train\", \"test\", \"\"). scale_method Character string specifying scaling method (\"scale\", \"norm\"). mean_vals Numeric vector storing mean values z-score scaling. sd_vals Numeric vector storing standard deviation values z-score scaling. min_vals Numeric vector storing minimum values minmax normalization. max_vals Numeric vector storing maximum values minmax normalization. t_mean_vals Numeric vector storing mean transformed values z-score scaling. t_sd_vals Numeric vector storing standard deviation transformed values z-score scaling. t_min_vals Numeric vector storing minimum values transformed minmax normalization. t_max_vals Numeric vector storing maximum values transformed minmax normalization. fun_transform List functions data transformation. fun_inverse List functions inverse data transformation. transformed Boolean value, `TRUE` object contains transformed values, `NA` result inverse transformation.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get All Data (X and Y) — get_data","title":"Get All Data (X and Y) — get_data","text":"Access complete data set preprocessed data.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get All Data (X and Y) — get_data","text":"","code":"get_data(object, ...)  # S4 method for class 'feature_data' get_data(   object,   prep = c(\"both\", \"scale\", \"transform\", \"none\"),   as_matrix = TRUE )"},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get All Data (X and Y) — get_data","text":"object `feature_data` object. ... Additional arguments (currently used). prep Character argument transformed data (\"transform\"), scaled data (\"scale\" ), transformed scaled data (\"\") original raw data (\"none\") returned. as_matrix logical TRUE function return matrix, data frame tibble otherwise.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get All Data (X and Y) — get_data","text":"data frame matrix containing data, including `id_col` `split_col`.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_data.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Get All Data (X and Y) — get_data","text":"get_data(feature_data): Method extracting data.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_id_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Get ID Columns for all data — get_id_all","title":"Get ID Columns for all data — get_id_all","text":"Extracts ID columns (ID) preprocessed data.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_id_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get ID Columns for all data — get_id_all","text":"","code":"get_id_all(object, ...)  # S4 method for class 'feature_data' get_id_all(object, as_matrix = TRUE)"},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_id_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get ID Columns for all data — get_id_all","text":"object `feature_data` object. ... Additional arguments (currently used). as_matrix logical TRUE function return matrix, data frame tibble otherwise.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_id_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get ID Columns for all data — get_id_all","text":"data frame matrix containing ID column(s).","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_id_all.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Get ID Columns for all data — get_id_all","text":"get_id_all(feature_data): Method extracting id columns data","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_id_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Get ID Columns for test data — get_id_test","title":"Get ID Columns for test data — get_id_test","text":"Extracts ID columns (ID) preprocessed data.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_id_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get ID Columns for test data — get_id_test","text":"","code":"get_id_test(object, ...)  # S4 method for class 'feature_data' get_id_test(object, as_matrix = TRUE)"},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_id_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get ID Columns for test data — get_id_test","text":"object `feature_data` object. ... Additional arguments (currently used). as_matrix logical TRUE function return matrix, data  frame tibble otherwise.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_id_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get ID Columns for test data — get_id_test","text":"data frame matrix containing ID column(s).","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_id_test.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Get ID Columns for test data — get_id_test","text":"get_id_test(feature_data): Method extracting id columns test data","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_id_train.html","id":null,"dir":"Reference","previous_headings":"","what":"Get ID Columns for training data — get_id_train","title":"Get ID Columns for training data — get_id_train","text":"Extracts ID columns (ID) preprocessed data.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_id_train.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get ID Columns for training data — get_id_train","text":"","code":"get_id_train(object, ...)  # S4 method for class 'feature_data' get_id_train(object, as_matrix = TRUE)"},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_id_train.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get ID Columns for training data — get_id_train","text":"object `feature_data` object. ... Additional arguments (currently used). as_matrix logical TRUE function return matrix, data frame tibble otherwise.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_id_train.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get ID Columns for training data — get_id_train","text":"data frame matrix containing ID column(s).","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_id_train.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Get ID Columns for training data — get_id_train","text":"get_id_train(feature_data): Method extracting id columns training data","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_x_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Get All Data (X) — get_x_all","title":"Get All Data (X) — get_x_all","text":"Extracts data (X) preprocessed data.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_x_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get All Data (X) — get_x_all","text":"","code":"get_x_all(object, ...)  # S4 method for class 'feature_data' get_x_all(   object,   prep = c(\"both\", \"scale\", \"transform\", \"none\"),   as_matrix = TRUE )"},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_x_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get All Data (X) — get_x_all","text":"object `feature_data` object. ... Additional arguments (currently used). prep Character argument transformed data (\"transform\"), scaled data (\"scale\" ), transformed scaled data (\"\") original raw data (\"none\") returned. as_matrix logical TRUE function return matrix, data frame tibble otherwise.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_x_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get All Data (X) — get_x_all","text":"data frame matrix containing data (X).","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_x_all.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Get All Data (X) — get_x_all","text":"get_x_all(feature_data): Method extracting data (X).","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_x_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Test Data (X) — get_x_test","title":"Get Test Data (X) — get_x_test","text":"Extracts test data (X) preprocessed data.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_x_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Test Data (X) — get_x_test","text":"","code":"get_x_test(object, ...)  # S4 method for class 'feature_data' get_x_test(   object,   prep = c(\"both\", \"scale\", \"transform\", \"none\"),   as_matrix = TRUE )"},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_x_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Test Data (X) — get_x_test","text":"object `feature_data` object. ... Additional arguments (currently used). prep Character argument transformed data (\"transform\"), scaled data (\"scale\" ), transformed scaled data (\"\") original raw data (\"none\") returned. as_matrix logical TRUE function return matrix, data frame tibble otherwise.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_x_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Test Data (X) — get_x_test","text":"data frame matrix containing test data (X).","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_x_test.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Get Test Data (X) — get_x_test","text":"get_x_test(feature_data): Method extracting test data (X).","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_x_train.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Training Data (X) — get_x_train","title":"Get Training Data (X) — get_x_train","text":"Extracts training data (X) preprocessed data.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_x_train.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Training Data (X) — get_x_train","text":"","code":"get_x_train(object, ...)  # S4 method for class 'feature_data' get_x_train(   object,   prep = c(\"both\", \"scale\", \"transform\", \"none\"),   as_matrix = TRUE )"},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_x_train.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Training Data (X) — get_x_train","text":"object `feature_data` object. ... Additional arguments (currently used). prep Character argument transformed data (\"transform\"), scaled data (\"scale\" ), transformed scaled data (\"\") original raw data (\"none\") returned. as_matrix logical TRUE function return matrix, data frame tibble otherwise.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_x_train.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Training Data (X) — get_x_train","text":"data frame matrix containing training data (X).","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_x_train.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Get Training Data (X) — get_x_train","text":"get_x_train(feature_data): Method extracting training data (X).","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_y_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Get All Data (Y) — get_y_all","title":"Get All Data (Y) — get_y_all","text":"Extracts data (Y) preprocessed data.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_y_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get All Data (Y) — get_y_all","text":"","code":"get_y_all(object, ...)  # S4 method for class 'feature_data' get_y_all(   object,   prep = c(\"both\", \"scale\", \"transform\", \"none\"),   as_matrix = TRUE )"},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_y_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get All Data (Y) — get_y_all","text":"object `feature_data` object. ... Additional arguments (currently used). prep Character argument transformed data (\"transform\"), scaled data (\"scale\" ), transformed scaled data (\"\") original raw data (\"none\") returned. as_matrix logical TRUE function return matrix, data frame tibble otherwise.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_y_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get All Data (Y) — get_y_all","text":"data frame matrix containing data (Y).","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_y_all.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Get All Data (Y) — get_y_all","text":"get_y_all(feature_data): Method extracting data (Y).","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_y_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Test Data (Y) — get_y_test","title":"Get Test Data (Y) — get_y_test","text":"Extracts test data (Y) preprocessed data.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_y_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Test Data (Y) — get_y_test","text":"","code":"get_y_test(object, ...)  # S4 method for class 'feature_data' get_y_test(   object,   prep = c(\"both\", \"scale\", \"transform\", \"none\"),   as_matrix = TRUE )"},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_y_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Test Data (Y) — get_y_test","text":"object `feature_data` object. ... Additional arguments (currently used). prep Character argument transformed data (\"transform\"), scaled data (\"scale\" ), transformed scaled data (\"\") original raw data (\"none\") returned. as_matrix logical TRUE function return matrix, data frame tibble otherwise.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_y_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Test Data (Y) — get_y_test","text":"data frame matrix containing test data (Y).","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_y_test.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Get Test Data (Y) — get_y_test","text":"get_y_test(feature_data): Method extracting test data (Y).","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_y_train.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Training Data (Y) — get_y_train","title":"Get Training Data (Y) — get_y_train","text":"Extracts training data (Y) preprocessed data.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_y_train.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Training Data (Y) — get_y_train","text":"","code":"get_y_train(object, ...)  # S4 method for class 'feature_data' get_y_train(   object,   prep = c(\"both\", \"scale\", \"transform\", \"none\"),   as_matrix = TRUE )"},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_y_train.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Training Data (Y) — get_y_train","text":"object `feature_data` object. ... Additional arguments (currently used). prep Character argument transformed data (\"transform\"), scaled data (\"scale\" ), transformed scaled data (\"\") original raw data (\"none\") returned. as_matrix logical TRUE function return matrix, data frame tibble otherwise.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_y_train.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Training Data (Y) — get_y_train","text":"data frame matrix containing training data (Y).","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/get_y_train.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Get Training Data (Y) — get_y_train","text":"get_y_train(feature_data): Method extracting training data (Y).","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/inv_transform_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Inverse Transform Data — inv_transform_data","title":"Inverse Transform Data — inv_transform_data","text":"Applies inverse transformation data.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/inv_transform_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inverse Transform Data — inv_transform_data","text":"","code":"inv_transform_data(object, params, funs, ...)  # S4 method for class 'feature_data,ANY,ANY' inv_transform_data(object, params, funs, ...)  # S4 method for class 'feature_data,missing,list' inv_transform_data(object, params, funs, ...)  # S4 method for class 'data.frame,feature_params,missing' inv_transform_data(object, params, funs, ...)"},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/inv_transform_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inverse Transform Data — inv_transform_data","text":"object `feature_data` object. params `feature_params` object transformation scaling parameters funs list inverse data transformation functions. ... Additional arguments (currently used).","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/inv_transform_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inverse Transform Data — inv_transform_data","text":"`feature_data` object `data.frame` inverse transformed data.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/inv_transform_data.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Inverse Transform Data — inv_transform_data","text":"inv_transform_data(object = feature_data, params = , funs = ): Method inverse transforming data `feature_data` object. inv_transform_data(object = feature_data, params = missing, funs = list): Method transforming data `feature_data` object user-defined functions (deprecated). inv_transform_data(   object = data.frame,   params = feature_params,   funs = missing ): Method `data frame`.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/list_or_NULL-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Union Class of List or NULL — list_or_NULL-class","title":"Union Class of List or NULL — list_or_NULL-class","text":"Class slots can empty","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/mlfeaturer-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Machine Learning and Feature Engineering for Regression Models — mlfeaturer-package","title":"Machine Learning and Feature Engineering for Regression Models — mlfeaturer-package","text":"package provides preprocessing tools using S4 classes data transformation, scaling, inverse transformation.","code":""},{"path":[]},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/mlfeaturer-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Machine Learning and Feature Engineering for Regression Models — mlfeaturer-package","text":"Maintainer: Thomas Petzoldt thomas.petzoldt@tu-dresden.de (ORCID)","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/predict-feature_data-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Model Predictions with `feature_data` Objects — predict,feature_data-method","title":"Model Predictions with `feature_data` Objects — predict,feature_data-method","text":"Makes predictions machine learning model `feature_data` object.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/predict-feature_data-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model Predictions with `feature_data` Objects — predict,feature_data-method","text":"","code":"# S4 method for class 'feature_data' predict(   object,   model,   subset = c(\"all\", \"test\", \"train\"),   xprep = c(\"both\", \"scale\", \"transform\", \"none\"),   yprep = c(\"both\", \"scale\", \"transform\", \"none\"),   to_original_scale = FALSE,   as_matrix = TRUE,   ... )"},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/predict-feature_data-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model Predictions with `feature_data` Objects — predict,feature_data-method","text":"object `feature_data` object. model fitted model object. subset Subset `preproc` data set. xprep Character argument transformed data (\"transform\"), scaled data (\"scale\" ), transformed scaled data (\"\") original raw data (\"none\") used x. yprep Character argument transformed data (\"transform\"), scaled data (\"scale\" ), transformed scaled data (\"\") original raw data (\"none\") used y. to_original_scale Logical value force re-transformation predictions original scale. as_matrix logical TRUE function return matrix, data frame tibble otherwise. ... Additional arguments (currently used).","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/predict-feature_data-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model Predictions with `feature_data` Objects — predict,feature_data-method","text":"matrix vector predictions.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/predict-feature_data-method.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Model Predictions with `feature_data` Objects — predict,feature_data-method","text":"Currently certain Keras models can used fitted models.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/residuals-feature_data-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Model Residuals Using `feature_data` Objects — residuals,feature_data-method","title":"Extract Model Residuals Using `feature_data` Objects — residuals,feature_data-method","text":"Extract residuals machine learning model compared `feature_data` object.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/residuals-feature_data-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Model Residuals Using `feature_data` Objects — residuals,feature_data-method","text":"","code":"# S4 method for class 'feature_data' residuals(   object,   model,   subset = c(\"all\", \"test\", \"train\"),   xprep = c(\"both\", \"scale\", \"transform\", \"none\"),   yprep = c(\"both\", \"scale\", \"transform\", \"none\"),   to_original_scale = FALSE,   as_matrix = TRUE,   ... )"},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/residuals-feature_data-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Model Residuals Using `feature_data` Objects — residuals,feature_data-method","text":"object `feature_data` object. model fitted model object. subset Subset `preproc` data set. xprep Character argument transformed data (\"transform\"), scaled data (\"scale\" ), transformed scaled data (\"\") original raw data (\"none\") used x. yprep Character argument transformed data (\"transform\"), scaled data (\"scale\" ), transformed scaled data (\"\") original raw data (\"none\") used y. to_original_scale Logical value force re-transformation predictions original scale. as_matrix logical TRUE function return matrix, data frame tibble otherwise. ... Additional arguments (currently used).","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/residuals-feature_data-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Model Residuals Using `feature_data` Objects — residuals,feature_data-method","text":"matrix vector residuals.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/residuals-feature_data-method.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Model Residuals Using `feature_data` Objects — residuals,feature_data-method","text":"Currently certain Keras models can used fitted models.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/rsquared.html","id":null,"dir":"Reference","previous_headings":"","what":"Nonlinear Coefficient of Determination Using `feature_data` Objects — rsquared","title":"Nonlinear Coefficient of Determination Using `feature_data` Objects — rsquared","text":"Estimates nonlinear R2 machine learning model compared   `feature_data` object.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/rsquared.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nonlinear Coefficient of Determination Using `feature_data` Objects — rsquared","text":"","code":"rsquared(object, ...)  # S4 method for class 'feature_data' rsquared(   object,   model,   subset = c(\"all\", \"test\", \"train\"),   prep = c(\"both\", \"scale\", \"transform\", \"none\"),   ... )"},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/rsquared.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nonlinear Coefficient of Determination Using `feature_data` Objects — rsquared","text":"object `feature_data` object. ... Additional arguments (currently used). model fitted model object. subset Subset `preproc` data set. prep Character argument transformed data (\"transform\"), scaled data (\"scale\" ), transformed scaled data (\"\") original raw data (\"none\") returned.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/rsquared.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nonlinear Coefficient of Determination Using `feature_data` Objects — rsquared","text":"coefficient determination.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/rsquared.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Nonlinear Coefficient of Determination Using `feature_data` Objects — rsquared","text":"Currently certain Keras models can used fitted models.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/rsquared.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Nonlinear Coefficient of Determination Using `feature_data` Objects — rsquared","text":"rsquared(feature_data): Method estimating coefficient determination model `feature_data` object.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/scale_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale Data — scale_data","title":"Scale Data — scale_data","text":"Scales data using stored parameters.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/scale_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale Data — scale_data","text":"","code":"scale_data(object, params, ...)  # S4 method for class 'feature_data,missing' scale_data(object, params, ...)  # S4 method for class 'data.frame,feature_params' scale_data(object, params, transformed = FALSE, ...)"},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/scale_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale Data — scale_data","text":"object `feature_data` object data frame. params n `feature_params` object scaling parameters ... Additional arguments (currently used). transformed `TRUE` use parameters transformed data.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/scale_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale Data — scale_data","text":"`feature_data` object scaled data.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/scale_data.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Scale Data — scale_data","text":"scale_data(object = feature_data, params = missing): Method scaling data `feature_data` object. scale_data(object = data.frame, params = feature_params): Method scaling data `feature_data` object.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/set_transformations.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Transformations — set_transformations","title":"Set Transformations — set_transformations","text":"Sets transformation functions `feature_data` object.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/set_transformations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Transformations — set_transformations","text":"","code":"set_transformations(object, fun_transform = NULL, fun_inverse = NULL)  # S4 method for class 'feature_data' set_transformations(object, fun_transform = NULL, fun_inverse = NULL)"},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/set_transformations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Transformations — set_transformations","text":"object `feature_data` object. fun_transform named list functions apply data.  T names correspond columns, values functions. fun_inverse named list functions representing inverse transformations.  structure `fun_transform`.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/set_transformations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Transformations — set_transformations","text":"`feature_data` object updated transformation functions.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/set_transformations.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Set Transformations — set_transformations","text":"set_transformations(feature_data): Method setting transformations `feature_data` object.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/transform_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform Data — transform_data","title":"Transform Data — transform_data","text":"Transforms data using provided functions.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/transform_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform Data — transform_data","text":"","code":"transform_data(object, params, funs, ...)  # S4 method for class 'feature_data,ANY,ANY' transform_data(object, params, funs, ...)  # S4 method for class 'feature_data,missing,list' transform_data(object, params, funs, ...)  # S4 method for class 'data.frame,feature_params,missing' transform_data(object, params, funs, ...)  # S4 method for class 'data.frame,missing,list' transform_data(object, params, funs, ...)"},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/transform_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform Data — transform_data","text":"object `feature_data` object data frame. params `feature_params` object transformation scaling parameters funs list data transformation functions . ... Additional arguments (currently used).","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/transform_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform Data — transform_data","text":"`feature_data` object `data.frame` transformed data.","code":""},{"path":"https://tpetzoldt.github.io/mlfeaturer/reference/transform_data.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Transform Data — transform_data","text":"transform_data(object = feature_data, params = , funs = ): Method transforming data `feature_data` object. transform_data(object = feature_data, params = missing, funs = list): Method transforming data `feature_data` object user-defined functions (deprecated). transform_data(object = data.frame, params = feature_params, funs = missing): Method `data frame`. transform_data(object = data.frame, params = missing, funs = list): Method `data frame`.","code":""}]
